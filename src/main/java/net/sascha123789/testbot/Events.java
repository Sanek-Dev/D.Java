/*
 * Copyright (c) Sascha123789 2023.
 */

package net.sascha123789.testbot;

import net.sascha123789.djava.api.SelfUser;
import net.sascha123789.djava.api.User;
import net.sascha123789.djava.api.entities.channel.Embed;
import net.sascha123789.djava.api.entities.channel.MessageableChannel;
import net.sascha123789.djava.api.entities.guild.Guild;
import net.sascha123789.djava.api.entities.guild.Member;
import net.sascha123789.djava.api.entities.role.Role;
import net.sascha123789.djava.api.enums.ChannelType;
import net.sascha123789.djava.api.enums.DiscordPermission;
import net.sascha123789.djava.api.enums.SlashCommandOptionType;
import net.sascha123789.djava.api.interactions.DeferEvent;
import net.sascha123789.djava.api.interactions.slash.*;
import net.sascha123789.djava.api.managers.SlashCommandManager;
import net.sascha123789.djava.gateway.EventAdapter;
import net.sascha123789.djava.gateway.events.HeartbeatEvent;
import net.sascha123789.djava.gateway.events.HelloEvent;
import net.sascha123789.djava.gateway.events.ReadyEvent;

import java.awt.*;
import java.util.concurrent.TimeUnit;

public class Events implements EventAdapter {

    @Override
    @DeferEvent
    public void onSlashCommandUse(SlashCommandUseEvent event) {
        Guild guild = event.getGuild();
        String name = event.getName();

        switch (name) {
            case "say" -> {
                String text = event.getOptions().get("—Ç–µ–∫—Å—Ç").getValueAsString().get();
                Embed emb = new Embed.Builder()
                        .setTitle("–£—Å–ø–µ—à–Ω–æ!")
                        .setColor(new Color(46, 154, 217))
                        .setDescription("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞: " + guild.getName())
                        .setThumbnailUrl(guild.getIconUrl())
                        .setTimestampNow()
                        .build();

                event.editReply(emb);
                event.replyFollowup(text);
            }
            case "calc" -> {
                int num0 = event.getOptions().get("—á–∏—Å–ª–æ1").getValueAsInt().get();
                int num1 = event.getOptions().get("—á–∏—Å–ª–æ2").getValueAsInt().get();
                int res = num0 + num1;

                Embed emb = new Embed.Builder()
                        .setTitle("–†–µ–∑—É–ª—å—Ç–∞—Ç")
                        .setDescription(num0 + " + " + num1 + " = " + res)
                        .setColor(new Color(46, 154, 217))
                        .setThumbnailUrl(event.getClient().getSelfUser().getAvatarUrl())
                        .setImageUrl(guild.getIconUrl())
                        .build();

                event.editReply(emb);
            }
            case "permissions" -> {
                Member member = event.getOptions().get("—É—á–∞—Å—Ç–Ω–∏–∫").getValueAsMember().get();
                User user = event.getOptions().get("—É—á–∞—Å—Ç–Ω–∏–∫").getValueAsUser().get();
                event.editReply("–ü—Ä–∏–≤–µ—Ç, *" + member.getNickname() + "*!\n–ò–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: *" + user.getUsername() + "*");
            }
            case "send-msg" -> {
                MessageableChannel channel = event.getOptions().get("–∫–∞–Ω–∞–ª").getValueAsChannel().get().asMessageable();
                String msg = event.getOptions().get("—Ç–µ–∫—Å—Ç").getValueAsString().get();
                channel.sendMessage(msg);
                event.editReply("–£—Å–ø–µ—à–Ω–æ!");
            }
            case "role" -> {
                event.editReply("–£—Å–ø–µ—à–Ω–æ!");
                String sub = event.getSubcommandName();
                Member member = event.getOptions().get("—É—á–∞—Å—Ç–Ω–∏–∫").getValueAsMember().get();
                Role role = event.getOptions().get("—Ä–æ–ª—å").getValueAsRole().get();

                if (sub.equals("add")) {
                    member.addRole(role);
                } else if (sub.equals("remove")) {
                    member.removeRole(role);
                }
            }
            case "bot-info" -> {
                Embed emb = new Embed.Builder()
                        .setTitle("ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ ü§ñ")
                        .setThumbnailUrl(event.getClient().getSelfUser().getAvatarUrl())
                        .addField("–ö–æ–ª-–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤", String.valueOf(event.getClient().getGuilds().size()))
                        .setColor(Color.YELLOW)
                        .build();

                event.editReply(emb);
            }
            case "timeout" -> {
                Member member = event.getOptions().get("—É—á–∞—Å—Ç–Ω–∏–∫").getValueAsMember().get();
                member.timeout(TimeUnit.DAYS, 1);

                event.editReply("–£—Å–ø–µ—à–Ω–æ!");
            }
        }
    }

    @Override
    public void onHello(HelloEvent event) {
        System.out.println("Hello!");
    }

    @Override
    public void onHeartbeat(HeartbeatEvent event) {
        System.out.println("Heartbeat!");
    }


    @Override
    public void onReady(ReadyEvent event) {
        SelfUser self = event.getSelfUser();
        SlashCommandManager manager = event.getSlashCommandManager();
        SlashCommandOption userOpt = new SlashCommandOption.Builder(SlashCommandOptionType.USER, "—É—á–∞—Å—Ç–Ω–∏–∫", "–£—á–∞—Å—Ç–Ω–∏–∫").setRequired(true).build();

        SubCommand add = new SubCommand.Builder("add", "–î–æ–±–∞–≤–∏—Ç—å").addOptions(userOpt).build();
        SubCommandGroup user = new SubCommandGroup.Builder("user", "–£—á–∞—Å—Ç–Ω–∏–∫").addSubcommand(add).build();
        SlashCommand permissions = manager.createBuilder("permissions", "–ü—Ä–∞–≤–∞")
                .addSubcommandGroup(user).setAvailableInDm(false).build();

        SlashCommandOption msgOption = new SlashCommandOption.Builder(SlashCommandOptionType.STRING, "—Ç–µ–∫—Å—Ç", "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è").setRequired(true).build();
        SlashCommand sayCmd = manager.createBuilder("say", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞").setAvailableInDm(false).addOptions(msgOption).addRequiredPermission(DiscordPermission.MANAGE_MESSAGES).build();

        SlashCommandOption num0 = new SlashCommandOption.Builder(SlashCommandOptionType.INTEGER, "—á–∏—Å–ª–æ1", "–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ").setRequired(true).build();
        SlashCommandOption num1 = new SlashCommandOption.Builder(SlashCommandOptionType.INTEGER, "—á–∏—Å–ª–æ2", "–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ").setRequired(true).build();
        SlashCommand calc = manager.createBuilder("calc", "–ü–æ—Å—á–∏—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª").addOptions(num0, num1).build();

        SlashCommandOption channelOpt = new SlashCommandOption.Builder(SlashCommandOptionType.CHANNEL, "–∫–∞–Ω–∞–ª", "–ö–∞–Ω–∞–ª —Å–µ—Ä–≤–µ—Ä–∞")
                .setRequired(true)
                .setChannelTypes(ChannelType.TEXT).build();
        SlashCommand send = manager.createBuilder("send-msg", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª")
                .addOptions(channelOpt, msgOption).build();

        SlashCommandOption roleOpt = new SlashCommandOption.Builder(SlashCommandOptionType.ROLE, "—Ä–æ–ª—å", "–†–æ–ª—å").setRequired(true).build();
        SubCommand addSub = new SubCommand.Builder("add", "–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å").addOptions(userOpt, roleOpt).build();
        SubCommand removeSub = new SubCommand.Builder("remove", "–£–±—Ä–∞—Ç—å —Ä–æ–ª—å").addOptions(userOpt, roleOpt).build();
        SlashCommand role = manager.createBuilder("role", "–†–æ–ª–∏")
                .addSubcommand(addSub)
                .addSubcommand(removeSub).setAvailableInDm(false).build();

        SlashCommand botInfo = manager.createBuilder("bot-info", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ").setAvailableInDm(true).build();

        SlashCommand timeout = manager.createBuilder("timeout", "–¢–∞–π–º–∞—É—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞")
                .setAvailableInDm(false)
                .addOptions(new SlashCommandOption.Builder(SlashCommandOptionType.USER, "—É—á–∞—Å—Ç–Ω–∏–∫", "–£—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞").setRequired(true).build()).build();

        manager.bulkOverwriteGlobalSlashCommands(permissions, sayCmd, calc, send, role, botInfo, timeout);

        System.out.println(self.toString() + " is ready!");
    }
}
